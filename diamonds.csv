carat,cut,color,clarity,depth,table,price,x,y,z
0.23,Ideal,E,SI2,1,2,3,4,5,6
0.21,Premium,E,SI1,11,12,13,14,15,16
0.23,Good,E,VS1,21,22,23,24,25,26
0.24,Ideal,E,VS4,41,42,43,44,45,46



# converts column into pre-mentioned data type
convertData <- function(data, newType) {
 # for each row of data
# print("Convert Data")
 # print(length(data))
 for(i in 1:length(data)) {
 if (newType[i] == "numeric")
 # print(sprintf("Converting %d",i))
 data[,i] = as.numeric(data[,i])
 # print(mode(data[,i]))
 }
 # return the data with modified column type
 return (data)
}
# read transposed data and convert it into proper form with appropriate header
read.table.transposed <- function(filename, dataType) {
 # read data from file
 #filename="student_data_02.csv"
 data = read.table(filename, sep = ",")
 # transpose data
 data = data.frame(t(data), stringsAsFactors = FALSE)
 # extract column headers
 colHeads = data[1,]
 # remove row with column headers
 data = data[-1,]
 # set column headers
 colnames(data) = colHeads
 # convert data into specified statement using custom 'convertData' function
# print("Converting Data")
 data = convertData(data, dataType)
 return(data)
}
# returns NA is column has different values, used to replace grades if they don't match
remove_dups <- function(cols) {
 cols = cols[!is.na(cols)]
 if ( length(unique(cols)) == 1 )
 return (unique(cols))
 return (NA)
}
# Main function
# read data from first file
sd_01 = read.table("student_data_01.csv", header = T, sep = ",")
# specify column types for second data frame
colTypes = c( rep("character", 3), rep("numeric", 13) )
# read transposed data from second file and covert it into proper format
sd_02 = read.table.transposed("student_data_02.csv", colTypes)
# merge two data sets based on all columns
sd = merge(sd_01, sd_02, by = colnames(sd_01), all = T)
# get list of duplicate elements
dups = sd[duplicated(sd$id),]$id
# for each duplicate student id
for(i in dups) {
 # get all the rows with given student id
 rows = sd[sd$id == i,]
 # remove the rows from the data set
 sd = sd[!(sd$id == i),]
 # generate new row with values matching from all rows, different values are replaced by NA
 newrow = apply(rows, 2, remove_dups)
 # append newly generated row to data set
 sd = rbind(sd, newrow)
}
# after removing duplicates, columns were converted into character type. Converting them back to numeric type
sd = convertData(sd, colTypes)
# replace column header from 'id' to 'studentId'
names(sd)[4] <- "studentId"
# write output to file
write.table(sd, "student_grades.csv", sep = ",", quote = FALSE, col.names = TRUE, row.names = FALSE)